{"version":3,"sources":["store/redux/utils.ts","features/CalcButton/CalcButtonStyles.ts","components/Calculator/CalculatorStyles.ts","features/CalcButton/CalcButton.tsx","utils/commonUtils.ts","store/redux/actions.ts","features/CalculateWindow/CalculateWindowStyles.ts","features/CalculateWindow/CalculateWindow.tsx","components/Calculator/Calculator.tsx","App.tsx","reportWebVitals.ts","store/redux/reducers.ts","store/redux/store.ts","index.tsx"],"names":["isNumeric","value","test","prevCalcPlus","item","prev","eval","prevCalcMinus","substring","length","mainSum","calcOperation","toString","Button","styled","div","background","borderColor","Container","Wrapper","Sum","CalcButton","children","calculator","onClick","symbols","calculationActions","type","CalculateWrap","CalculateWindow","useSelector","state","calculation","prevCalculation","style","color","Calculator","dispatch","useDispatch","map","calculate","Math","floor","random","Date","now","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","slice","undefined","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b1f77a.chunk.js","sourcesContent":["function isNumeric(value: string) {\n  return /^-?\\d+$/.test(value);\n}\n\nexport function prevCalcPlus(item: string, prev: string) {\n  if (isNumeric(item)) {\n    return eval(prev + item);\n  }\n  return eval(prev);\n}\n\nexport function prevCalcMinus(item: string, prev: string) {\n  if (isNumeric(item)) {\n    return eval(prev.substring(0, prev.length - 2));\n  }\n  return eval(prev.substring(0, prev.length - 1));\n}\n\nexport function mainSum(calcOperation: string) {\n  return eval(calcOperation).toString();\n}\n","import styled from \"styled-components\";\n\ninterface IStyle {\n  background?: string;\n  borderColor?: string;\n}\n\nexport const Button = styled.div<IStyle>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 5.25rem;\n  width: 5.25rem;\n  color: black;\n  background-color: ${({ background }) => background || \"white\"};\n  border: 1px solid ${({ borderColor }) => borderColor || \"black\"};\n  font-size: 1.5rem;\n`;\n","import styled from \"styled-components\";\nimport { Button } from \"../../features/CalcButton/CalcButtonStyles\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #80a8ee;\n  justify-content: center;\n  align-items: center;\n  height: 40.5rem;\n  width: 27.75rem;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5.25rem 5.25rem 5.25rem 5.25rem;\n  grid-template-rows: 5.25rem 5.25rem 5.25rem 5.25rem;\n  column-gap: 0.63rem;\n  row-gap: 0.63rem;\n`;\n\nexport const Sum = styled(Button)`\n  width: 11.15rem;\n  background-color: #ffbf0f;\n`;\n","import React, { ReactNode } from \"react\";\nimport { Button } from \"./CalcButtonStyles\";\n\ninterface IProps {\n  children: ReactNode;\n  calculator?: () => void;\n  background?: string;\n}\n\nexport const CalcButton: React.FC<IProps> = ({\n  children,\n  calculator,\n  background,\n}) => {\n  return (\n    <Button onClick={calculator} background={background}>\n      {children}\n    </Button>\n  );\n};\n","export const symbols = [\n  \"%\",\n  \"/\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"*\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"-\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"+\",\n  \".\",\n  \"0\",\n];\n\nexport function uniqueID() {\n  return Math.floor(Math.random() * Date.now()).toString();\n}\n","import { InferActionsTypes } from \"./store\";\n\nexport type calculationActionsType = InferActionsTypes<\n  typeof calculationActions\n>;\n\nexport const calculationActions = {\n  addToCalcOperation: (item: string) =>\n    ({ type: \"calculation/ADD_T0_CALC_OPERATION\", item } as const),\n  removeSymbol: () => ({ type: \"calculation/REMOVE_SYMBOL\" } as const),\n  clearAll: () => ({ type: \"calculation/CLEAR_ALL\" } as const),\n  setMainSum: () => ({ type: \"calculation/SET_MAIN_SUM\" } as const),\n\n};\n","import styled from \"styled-components\";\n\nexport const CalculateWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 4rem;\n  width: 19.75rem;\n  background-color: white;\n  font-size: 1.5rem;\n  margin-bottom: 0.63rem;\n  padding: 1.25rem;\n  border: 2px solid #ffbf0f;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../store/redux/store\";\nimport { CalculateWrap } from \"./CalculateWindowStyles\";\n\nexport const CalculateWindow = () => {\n  const { calcOperation, prevCalculation } = useSelector(\n    (state: AppStateType) => state.calculation\n  );\n\n  return (\n    <CalculateWrap>\n      <div>\n        <div>{calcOperation}</div>\n        <div style={{ color: \"gray\" }}>{prevCalculation}</div>\n      </div>\n    </CalculateWrap>\n  );\n};\n","import React from \"react\";\nimport { Container, Sum, Wrapper } from \"./CalculatorStyles\";\nimport { CalcButton } from \"../../features/CalcButton/CalcButton\";\nimport { symbols, uniqueID } from \"../../utils/commonUtils\";\nimport { useDispatch } from \"react-redux\";\nimport { calculationActions } from \"../../store/redux/actions\";\nimport { CalculateWindow } from \"../../features/CalculateWindow/CalculateWindow\";\n\nexport const Calculator = () => {\n  const dispatch = useDispatch();\n\n  const calculate = (item: string) => {\n    dispatch(calculationActions.addToCalcOperation(item));\n  };\n\n  const removeSymbol = () => {\n    dispatch(calculationActions.removeSymbol());\n  };\n\n  const clearAll = () => {\n    dispatch(calculationActions.clearAll());\n  };\n\n  const setSum = () => {\n    dispatch(calculationActions.setMainSum());\n  };\n\n  return (\n    <Container>\n      <CalculateWindow />\n      <Wrapper>\n        <CalcButton calculator={clearAll} background=\"#d9d0d0\">\n          AC\n        </CalcButton>\n        <CalcButton calculator={removeSymbol}>X</CalcButton>\n        {symbols.map((item) => (\n          <CalcButton calculator={() => calculate(item)} key={uniqueID()}>\n            {item}\n          </CalcButton>\n        ))}\n        <Sum onClick={setSum}>=</Sum>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { Calculator } from \"./components/Calculator/Calculator\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Calculator} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { calculationActionsType } from \"./actions\";\nimport { mainSum, prevCalcMinus, prevCalcPlus } from \"./utils\";\n\nexport interface IState {\n  calcOperation: string;\n  prevCalculation: number | undefined;\n}\n\nconst initialState = {\n  calcOperation: \"\",\n  prevCalculation: 0,\n};\n\nexport const calculationReducer = (\n  state = initialState,\n  action: calculationActionsType\n): IState => {\n  switch (action.type) {\n    case \"calculation/ADD_T0_CALC_OPERATION\":\n      return {\n        ...state,\n        calcOperation: state.calcOperation + action.item,\n        prevCalculation: prevCalcPlus(action.item, state.calcOperation),\n      };\n    case \"calculation/REMOVE_SYMBOL\":\n      return {\n        ...state,\n        calcOperation: state.calcOperation.substring(\n          0,\n          state.calcOperation.length - 1\n        ),\n        prevCalculation: prevCalcMinus(\n          state.calcOperation.slice(-1),\n          state.calcOperation\n        ),\n      };\n    case \"calculation/CLEAR_ALL\":\n      return {\n        ...state,\n        prevCalculation: 0,\n        calcOperation: \"\",\n      };\n    case \"calculation/SET_MAIN_SUM\":\n      return {\n        ...state,\n        calcOperation: mainSum(state.calcOperation),\n        prevCalculation: undefined,\n      };\n  }\n  return state;\n};\n","import { combineReducers, createStore } from \"redux\";\nimport { calculationReducer } from \"./reducers\";\n\nlet reducers = combineReducers({\n  calculation: calculationReducer,\n});\nexport const store = createStore(reducers);\n\n// ______type of state___________\n\ntype RootReducerType = typeof reducers;\nexport type AppStateType = ReturnType<RootReducerType>;\n\n// ______type of actions___________\n\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\nexport type InferActionsTypes<\n  T extends { [key: string]: (...args: any[]) => any }\n> = ReturnType<PropertiesType<T>>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {store} from \"./store/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}